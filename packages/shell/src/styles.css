:root {
  --shell-container-max-width: 60rem;
  --shell-container-padding-h: 1.6rem;
  --shell-container-padding-v: 1.6rem;
  --shell-container-padding: var(--shell-container-padding-v)
    var(--shell-container-padding-h);
}

body,
.app {
  position: absolute;
  top: 0;
  right: 0;
  left: 0;
  min-height: 100%;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
}

body > :first-child,
.app > :first-child {
  flex-grow: 1;
}

shell-loading {
  position: absolute;
  top: 50%;
  left: 50%;

  transform: translate(-50%, -50%);
}

.hidden {
  display: none;
}

/* === Appbar Module === */
.appbar {
  position: sticky;
  right: 0;
  bottom: 0;
  left: 0;

  background-color: var(--color-wet-asphalt);
  box-shadow: 0 -0.2rem 0.8rem #0001;
  color: var(--color-clouds);
  z-index: 99;
}
.appbar-grid,
.appbar-text {
  margin: 0 auto;
  width: 100%;
  max-width: var(--shell-container-max-width);
}
.appbar-grid {
  display: grid;
  grid-template-rows: 1fr;
  grid-template-columns: repeat(auto-fill, 2.3em);
  gap: 0.8rem;
  padding: 1.6rem 2.4rem;
  padding-block-end: 0.8rem;
  font-size: 1.3em;
}
.appbar-text {
  font-size: 0.9em;
  padding: 0.8rem 2.4rem;
  display: flex;
  justify-content: space-between;
  flex-wrap: wrap;
  gap: 0.8rem;

  color: var(--color-silver);
}
.appbar-text-link-list {
  display: flex;
  flex-wrap: wrap;
}
.appbar-text-link-list > li + li::before {
  content: "/";
}
.appbar-text-link-list a {
  padding: 0 0.8rem;
  cursor: pointer;
  text-decoration: underline;
}
.appbar-text-link-list a:hover {
  color: var(--color-clouds);
}

.appbar-separator {
  position: relative;
  width: 0.6rem;
  height: 0.6rem;
  margin: auto;

  background-color: var(--theme-fg-sub);
  border-radius: 50%;

  opacity: 0.3;
}

/* === Button Module === */
.button {
  display: inline-block;
  padding: 0.8rem 1.6rem;

  background-color: var(--theme-fg);
  border-radius: 0.4rem;
  border: 0.2rem solid var(--theme-bg);
  color: var(--theme-bg);
  cursor: pointer;

  transition: transform 0.15s ease-out, opacity 0.2s ease-out;
}
.button:hover:not(:disabled) {
  box-shadow: 0 0 0 0.15rem var(--theme-fg);
}
.button:active:not(:disabled) {
  opacity: 0.8;
  transform: scale(0.98);
}
.button:focus {
  box-shadow: 0 0 0 0.15rem Highlight;
  outline: none;
}
.button:disabled,
.button[data-disabled="disabled"] {
  background-color: var(--theme-fg-sub);
  color: var(--theme-bg-sub);
}
.button[data-disabled="disabled"] {
  pointer-events: none;
}

.button-circle {
  display: inline-block;
  padding: 0.5em;
  border-radius: 50%;

  text-align: center;
}
.button-circle::before {
  margin: 0;
}

.button-fill {
  color: var(--theme-primary);
}
.button-active {
  background-color: var(--theme-primary);
  color: var(--theme-fg);
}

/* === Error Module === */
.error {
  display: block;
  margin: auto;
  padding: var(--shell-container-padding);
  width: 100%;
  max-width: calc(
    var(--shell-container-max-width) + var(--shell-container-padding-h) * 2
  );
}
.error.error.error {
  flex-grow: 0;
}

.error-title {
  font-size: 6rem;

  font-weight: bold;
}

.error-details {
  margin-block-start: 1em;
  font-size: 1.1em;
}

.error-action {
  margin-block-start: 1.5em;
}
