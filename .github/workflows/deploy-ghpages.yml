# Deploy apps to GitHub Pages
name: Deploy to GHPages

on:
  push:
    branches:
      - master

env:
  BASE_URL: "https://${{github.repository_owner}}.github.io/${{github.event.repository.name}}"

jobs:
  # This job installs deps and cache them when lockfiles is updated.
  prepare:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Read .nvmrc
        run: echo "##[set-output name=NVMRC;]$(cat .nvmrc)"
        id: nvm
      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: "${{ steps.nvm.outputs.NVMRC }}"
      - name: Cache dependencies
        uses: actions/cache@v2
        env:
          cache-name: node_modules
        with:
          path: "./**/node_modules"
          key: ${{env.cache-name}}-${{hashFiles('./yarn.lock')}}
          restore-keys: |
            ${{env.cache-name}}-
      - name: Install dependencies
        run: yarn install --frozen-lockfile

  build-packages:
    runs-on: ubuntu-latest
    needs: prepare
    strategy:
      matrix:
        package: [shell, app-profile, app-random-event-counter]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Read .nvmrc
        run: echo "##[set-output name=NVMRC;]$(cat .nvmrc)"
        id: nvm
      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: "${{ steps.nvm.outputs.NVMRC }}"
      - name: Cache dependencies
        uses: actions/cache@v2
        env:
          cache-name: node_modules
        with:
          path: "./**/node_modules"
          key: ${{env.cache-name}}-${{hashFiles('./yarn.lock')}}
          restore-keys: |
            ${{env.cache-name}}-
      - name: Install dependencies
        run: yarn install --frozen-lockfile
      - name: Build
        run: yarn workspace @genshin-utils/${{matrix.package}} build
        env:
          APP_PROFILE_HOST: "${{env.BASE_URL}}/profile"
          APP_RANDOM_EVENT_COUNTER_HOST: "${{env.BASE_URL}}/random-event-counter"
      - name: Store built files
        uses: actions/upload-artifact@v2
        with:
          name: dist-${{matrix.package}}
          path: packages/${{matrix.package}}/dist
          retention-days: 1

  deploy:
    runs-on: ubuntu-latest
    needs: build-packages
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Download shell
        uses: actions/download-artifact@v2
        with:
          name: dist-shell
          path: dist
      - name: Download profile app
        uses: actions/download-artifact@v2
        with:
          name: dist-app-profile
          path: dist/profile
      - name: Download random event counter app
        uses: actions/download-artifact@v2
        with:
          name: dist-app-random-event-counter
          path: dist/random-event-counter
      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: dist
